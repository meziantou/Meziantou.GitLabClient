// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace Meziantou.GitLab
{
    [System.Text.Json.Serialization.JsonConverterAttribute(typeof(Meziantou.GitLab.Serialization.RunnerAccessLevelJsonConverter))]
    public enum RunnerAccessLevel
    {
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "not_protected")]
        NotProtected,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "ref_protected")]
        RefProtected
    }
}

namespace Meziantou.GitLab.Serialization
{
    internal partial class EnumMember
    {
        private static readonly Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RunnerAccessLevel>[] s_runnerAccessLevelMembers = Meziantou.GitLab.Serialization.EnumMember.CreateRunnerAccessLevelMembers();

        public static Meziantou.GitLab.RunnerAccessLevel RunnerAccessLevelFromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.FromString(value, Meziantou.GitLab.Serialization.EnumMember.s_runnerAccessLevelMembers);
        }

        public static string ToString(Meziantou.GitLab.RunnerAccessLevel value)
        {
            if ((value == Meziantou.GitLab.RunnerAccessLevel.NotProtected))
            {
                return "not_protected";
            }

            if ((value == Meziantou.GitLab.RunnerAccessLevel.RefProtected))
            {
                return "ref_protected";
            }

            throw new System.ArgumentOutOfRangeException(nameof(value), string.Concat("Value '", value.ToString(), "' is not valid"));
        }

        private static Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RunnerAccessLevel>[] CreateRunnerAccessLevelMembers()
        {
            Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RunnerAccessLevel>[] result = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RunnerAccessLevel>[2];
            result[0] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RunnerAccessLevel>(Meziantou.GitLab.RunnerAccessLevel.NotProtected, "not_protected");
            result[1] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RunnerAccessLevel>(Meziantou.GitLab.RunnerAccessLevel.RefProtected, "ref_protected");
            return result;
        }
    }

    internal sealed partial class RunnerAccessLevelJsonConverter : Meziantou.GitLab.Serialization.EnumBaseJsonConverter<Meziantou.GitLab.RunnerAccessLevel>
    {
        protected override Meziantou.GitLab.RunnerAccessLevel FromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.RunnerAccessLevelFromString(value);
        }

        protected override string ToString(Meziantou.GitLab.RunnerAccessLevel value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.ToString(value);
        }
    }
}

namespace Meziantou.GitLab.Internals
{
    internal partial struct UrlBuilder
    {
        public void AppendParameter(Meziantou.GitLab.RunnerAccessLevel value)
        {
            this.Append(Meziantou.GitLab.Serialization.EnumMember.ToString(value));
        }

        public void AppendRawParameter(Meziantou.GitLab.RunnerAccessLevel value)
        {
            this.Append(Meziantou.GitLab.Serialization.EnumMember.ToString(value));
        }
    }
}
