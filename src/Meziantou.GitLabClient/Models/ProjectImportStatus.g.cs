// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace Meziantou.GitLab
{
    [System.Text.Json.Serialization.JsonConverterAttribute(typeof(Meziantou.GitLab.Serialization.ProjectImportStatusJsonConverter))]
    public enum ProjectImportStatus
    {
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "none")]
        None,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "scheduled")]
        Scheduled,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "failed")]
        Failed,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "started")]
        Started,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "finished")]
        Finished
    }
}

namespace Meziantou.GitLab.Serialization
{
    internal partial class EnumMember
    {
        private static readonly Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectImportStatus>[] s_projectImportStatusMembers = Meziantou.GitLab.Serialization.EnumMember.CreateProjectImportStatusMembers();

        public static Meziantou.GitLab.ProjectImportStatus ProjectImportStatusFromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.FromString(value, Meziantou.GitLab.Serialization.EnumMember.s_projectImportStatusMembers);
        }

        public static string ToString(Meziantou.GitLab.ProjectImportStatus value)
        {
            if ((value == Meziantou.GitLab.ProjectImportStatus.None))
            {
                return "none";
            }

            if ((value == Meziantou.GitLab.ProjectImportStatus.Scheduled))
            {
                return "scheduled";
            }

            if ((value == Meziantou.GitLab.ProjectImportStatus.Failed))
            {
                return "failed";
            }

            if ((value == Meziantou.GitLab.ProjectImportStatus.Started))
            {
                return "started";
            }

            if ((value == Meziantou.GitLab.ProjectImportStatus.Finished))
            {
                return "finished";
            }

            throw new System.ArgumentOutOfRangeException(nameof(value), string.Concat("Value '", value.ToString(), "' is not valid"));
        }

        private static Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectImportStatus>[] CreateProjectImportStatusMembers()
        {
            Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectImportStatus>[] result = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectImportStatus>[5];
            result[0] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectImportStatus>(Meziantou.GitLab.ProjectImportStatus.None, "none");
            result[1] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectImportStatus>(Meziantou.GitLab.ProjectImportStatus.Scheduled, "scheduled");
            result[2] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectImportStatus>(Meziantou.GitLab.ProjectImportStatus.Failed, "failed");
            result[3] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectImportStatus>(Meziantou.GitLab.ProjectImportStatus.Started, "started");
            result[4] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectImportStatus>(Meziantou.GitLab.ProjectImportStatus.Finished, "finished");
            return result;
        }
    }

    internal sealed partial class ProjectImportStatusJsonConverter : Meziantou.GitLab.Serialization.EnumBaseJsonConverter<Meziantou.GitLab.ProjectImportStatus>
    {
        protected override Meziantou.GitLab.ProjectImportStatus FromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.ProjectImportStatusFromString(value);
        }

        protected override string ToString(Meziantou.GitLab.ProjectImportStatus value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.ToString(value);
        }
    }
}

namespace Meziantou.GitLab.Internals
{
    internal partial struct UrlBuilder
    {
        public void AppendParameter(Meziantou.GitLab.ProjectImportStatus value)
        {
            this.Append(Meziantou.GitLab.Serialization.EnumMember.ToString(value));
        }

        public void AppendRawParameter(Meziantou.GitLab.ProjectImportStatus value)
        {
            this.Append(Meziantou.GitLab.Serialization.EnumMember.ToString(value));
        }
    }
}
