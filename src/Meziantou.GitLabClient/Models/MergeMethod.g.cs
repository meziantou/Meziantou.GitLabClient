// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace Meziantou.GitLab
{
    [System.Text.Json.Serialization.JsonConverterAttribute(typeof(Meziantou.GitLab.Serialization.MergeMethodJsonConverter))]
    public enum MergeMethod
    {
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "merge")]
        Merge,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "rebase_merge")]
        RebaseMerge,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "ff")]
        FastForward
    }
}

namespace Meziantou.GitLab.Serialization
{
    internal partial class EnumMember
    {
        private static readonly Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeMethod>[] s_mergeMethodMembers = Meziantou.GitLab.Serialization.EnumMember.CreateMergeMethodMembers();

        public static Meziantou.GitLab.MergeMethod MergeMethodFromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.FromString(value, Meziantou.GitLab.Serialization.EnumMember.s_mergeMethodMembers);
        }

        public static string ToString(Meziantou.GitLab.MergeMethod value)
        {
            if ((value == Meziantou.GitLab.MergeMethod.Merge))
            {
                return "merge";
            }

            if ((value == Meziantou.GitLab.MergeMethod.RebaseMerge))
            {
                return "rebase_merge";
            }

            if ((value == Meziantou.GitLab.MergeMethod.FastForward))
            {
                return "ff";
            }

            throw new System.ArgumentOutOfRangeException(nameof(value), string.Concat("Value '", value.ToString(), "' is not valid"));
        }

        private static Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeMethod>[] CreateMergeMethodMembers()
        {
            Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeMethod>[] result = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeMethod>[3];
            result[0] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeMethod>(Meziantou.GitLab.MergeMethod.Merge, "merge");
            result[1] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeMethod>(Meziantou.GitLab.MergeMethod.RebaseMerge, "rebase_merge");
            result[2] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeMethod>(Meziantou.GitLab.MergeMethod.FastForward, "ff");
            return result;
        }
    }

    internal sealed partial class MergeMethodJsonConverter : Meziantou.GitLab.Serialization.EnumBaseJsonConverter<Meziantou.GitLab.MergeMethod>
    {
        protected override Meziantou.GitLab.MergeMethod FromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.MergeMethodFromString(value);
        }

        protected override string ToString(Meziantou.GitLab.MergeMethod value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.ToString(value);
        }
    }
}

namespace Meziantou.GitLab.Internals
{
    internal partial struct UrlBuilder
    {
        public void AppendParameter(Meziantou.GitLab.MergeMethod value)
        {
            this.Append(Meziantou.GitLab.Serialization.EnumMember.ToString(value));
        }
    }
}
