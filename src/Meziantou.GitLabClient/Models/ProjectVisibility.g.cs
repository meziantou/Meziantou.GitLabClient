// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace Meziantou.GitLab
{
    [System.Text.Json.Serialization.JsonConverterAttribute(typeof(Meziantou.GitLab.Serialization.ProjectVisibilityJsonConverter))]
    public enum ProjectVisibility
    {
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "private")]
        Private,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "internal")]
        Internal,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "public")]
        Public
    }

    internal partial class UrlBuilder
    {
        public void SetValue(string key, Meziantou.GitLab.ProjectVisibility? value)
        {
            if (value.HasValue)
            {
                this.SetValue(key, value.GetValueOrDefault());
            }
            else
            {
                this.RemoveValues(key);
            }
        }

        public void SetValue(string key, Meziantou.GitLab.ProjectVisibility value)
        {
            this.SetStringValue(key, Meziantou.GitLab.Serialization.EnumMember.ToString(value));
        }
    }
}

namespace Meziantou.GitLab.Serialization
{
    internal partial class EnumMember
    {
        private static readonly Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectVisibility>[] s_projectVisibilityMembers = Meziantou.GitLab.Serialization.EnumMember.CreateProjectVisibilityMembers();

        public static Meziantou.GitLab.ProjectVisibility ProjectVisibilityFromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.FromString(value, Meziantou.GitLab.Serialization.EnumMember.s_projectVisibilityMembers);
        }

        public static string ToString(Meziantou.GitLab.ProjectVisibility value)
        {
            if ((value == Meziantou.GitLab.ProjectVisibility.Private))
            {
                return "private";
            }

            if ((value == Meziantou.GitLab.ProjectVisibility.Internal))
            {
                return "internal";
            }

            if ((value == Meziantou.GitLab.ProjectVisibility.Public))
            {
                return "public";
            }

            throw new System.ArgumentOutOfRangeException(nameof(value), string.Concat("Value '", value.ToString(), "' is not valid"));
        }

        private static Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectVisibility>[] CreateProjectVisibilityMembers()
        {
            Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectVisibility>[] result = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectVisibility>[3];
            result[0] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectVisibility>(Meziantou.GitLab.ProjectVisibility.Private, "private");
            result[1] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectVisibility>(Meziantou.GitLab.ProjectVisibility.Internal, "internal");
            result[2] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.ProjectVisibility>(Meziantou.GitLab.ProjectVisibility.Public, "public");
            return result;
        }
    }

    internal sealed partial class ProjectVisibilityJsonConverter : Meziantou.GitLab.Serialization.EnumBaseJsonConverter<Meziantou.GitLab.ProjectVisibility>
    {
        protected override Meziantou.GitLab.ProjectVisibility FromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.ProjectVisibilityFromString(value);
        }

        protected override string ToString(Meziantou.GitLab.ProjectVisibility value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.ToString(value);
        }
    }
}
