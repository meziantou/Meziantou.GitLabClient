// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace Meziantou.GitLab
{
    [System.Text.Json.Serialization.JsonConverterAttribute(typeof(Meziantou.GitLab.Serialization.OrderByDirectionJsonConverter))]
    public enum OrderByDirection
    {
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "asc")]
        Ascending,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "desc")]
        Descending
    }

    internal partial class UrlBuilder
    {
        public void SetValue(string key, Meziantou.GitLab.OrderByDirection? value)
        {
            if (value.HasValue)
            {
                this.SetValue(key, value.GetValueOrDefault());
            }
            else
            {
                this.RemoveValues(key);
            }
        }

        public void SetValue(string key, Meziantou.GitLab.OrderByDirection value)
        {
            this.SetStringValue(key, Meziantou.GitLab.Serialization.EnumMember.ToString(value));
        }
    }
}

namespace Meziantou.GitLab.Serialization
{
    internal partial class EnumMember
    {
        private static readonly Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.OrderByDirection>[] s_orderByDirectionMembers = Meziantou.GitLab.Serialization.EnumMember.CreateOrderByDirectionMembers();

        public static Meziantou.GitLab.OrderByDirection OrderByDirectionFromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.FromString(value, Meziantou.GitLab.Serialization.EnumMember.s_orderByDirectionMembers);
        }

        public static string ToString(Meziantou.GitLab.OrderByDirection value)
        {
            if ((value == Meziantou.GitLab.OrderByDirection.Ascending))
            {
                return "asc";
            }

            if ((value == Meziantou.GitLab.OrderByDirection.Descending))
            {
                return "desc";
            }

            throw new System.ArgumentOutOfRangeException(nameof(value), string.Concat("Value '", value.ToString(), "' is not valid"));
        }

        private static Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.OrderByDirection>[] CreateOrderByDirectionMembers()
        {
            Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.OrderByDirection>[] result = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.OrderByDirection>[2];
            result[0] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.OrderByDirection>(Meziantou.GitLab.OrderByDirection.Ascending, "asc");
            result[1] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.OrderByDirection>(Meziantou.GitLab.OrderByDirection.Descending, "desc");
            return result;
        }
    }

    internal sealed partial class OrderByDirectionJsonConverter : Meziantou.GitLab.Serialization.EnumBaseJsonConverter<Meziantou.GitLab.OrderByDirection>
    {
        protected override Meziantou.GitLab.OrderByDirection FromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.OrderByDirectionFromString(value);
        }

        protected override string ToString(Meziantou.GitLab.OrderByDirection value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.ToString(value);
        }
    }
}
