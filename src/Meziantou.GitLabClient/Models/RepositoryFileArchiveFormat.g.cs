// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace Meziantou.GitLab
{
    [System.Text.Json.Serialization.JsonConverterAttribute(typeof(Meziantou.GitLab.Serialization.RepositoryFileArchiveFormatJsonConverter))]
    public enum RepositoryFileArchiveFormat
    {
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "tar.gz")]
        TarGz,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "tar.bz2")]
        TarBz2,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "tbz")]
        Tbz,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "tbz2")]
        Tbz2,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "tb2")]
        Tb2,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "bz2")]
        Bz2,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "tar")]
        Tar,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "zip")]
        Zip
    }
}

namespace Meziantou.GitLab.Serialization
{
    internal partial class EnumMember
    {
        private static readonly Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RepositoryFileArchiveFormat>[] s_repositoryFileArchiveFormatMembers = Meziantou.GitLab.Serialization.EnumMember.CreateRepositoryFileArchiveFormatMembers();

        public static Meziantou.GitLab.RepositoryFileArchiveFormat RepositoryFileArchiveFormatFromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.FromString(value, Meziantou.GitLab.Serialization.EnumMember.s_repositoryFileArchiveFormatMembers);
        }

        public static string ToString(Meziantou.GitLab.RepositoryFileArchiveFormat value)
        {
            if ((value == Meziantou.GitLab.RepositoryFileArchiveFormat.TarGz))
            {
                return "tar.gz";
            }

            if ((value == Meziantou.GitLab.RepositoryFileArchiveFormat.TarBz2))
            {
                return "tar.bz2";
            }

            if ((value == Meziantou.GitLab.RepositoryFileArchiveFormat.Tbz))
            {
                return "tbz";
            }

            if ((value == Meziantou.GitLab.RepositoryFileArchiveFormat.Tbz2))
            {
                return "tbz2";
            }

            if ((value == Meziantou.GitLab.RepositoryFileArchiveFormat.Tb2))
            {
                return "tb2";
            }

            if ((value == Meziantou.GitLab.RepositoryFileArchiveFormat.Bz2))
            {
                return "bz2";
            }

            if ((value == Meziantou.GitLab.RepositoryFileArchiveFormat.Tar))
            {
                return "tar";
            }

            if ((value == Meziantou.GitLab.RepositoryFileArchiveFormat.Zip))
            {
                return "zip";
            }

            throw new System.ArgumentOutOfRangeException(nameof(value), string.Concat("Value '", value.ToString(), "' is not valid"));
        }

        private static Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RepositoryFileArchiveFormat>[] CreateRepositoryFileArchiveFormatMembers()
        {
            Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RepositoryFileArchiveFormat>[] result = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RepositoryFileArchiveFormat>[8];
            result[0] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RepositoryFileArchiveFormat>(Meziantou.GitLab.RepositoryFileArchiveFormat.TarGz, "tar.gz");
            result[1] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RepositoryFileArchiveFormat>(Meziantou.GitLab.RepositoryFileArchiveFormat.TarBz2, "tar.bz2");
            result[2] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RepositoryFileArchiveFormat>(Meziantou.GitLab.RepositoryFileArchiveFormat.Tbz, "tbz");
            result[3] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RepositoryFileArchiveFormat>(Meziantou.GitLab.RepositoryFileArchiveFormat.Tbz2, "tbz2");
            result[4] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RepositoryFileArchiveFormat>(Meziantou.GitLab.RepositoryFileArchiveFormat.Tb2, "tb2");
            result[5] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RepositoryFileArchiveFormat>(Meziantou.GitLab.RepositoryFileArchiveFormat.Bz2, "bz2");
            result[6] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RepositoryFileArchiveFormat>(Meziantou.GitLab.RepositoryFileArchiveFormat.Tar, "tar");
            result[7] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.RepositoryFileArchiveFormat>(Meziantou.GitLab.RepositoryFileArchiveFormat.Zip, "zip");
            return result;
        }
    }

    internal sealed partial class RepositoryFileArchiveFormatJsonConverter : Meziantou.GitLab.Serialization.EnumBaseJsonConverter<Meziantou.GitLab.RepositoryFileArchiveFormat>
    {
        protected override Meziantou.GitLab.RepositoryFileArchiveFormat FromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.RepositoryFileArchiveFormatFromString(value);
        }

        protected override string ToString(Meziantou.GitLab.RepositoryFileArchiveFormat value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.ToString(value);
        }
    }
}

namespace Meziantou.GitLab.Internals
{
    internal partial struct UrlBuilder
    {
        public void AppendParameter(Meziantou.GitLab.RepositoryFileArchiveFormat value)
        {
            this.Append(Meziantou.GitLab.Serialization.EnumMember.ToString(value));
        }

        public void AppendRawParameter(Meziantou.GitLab.RepositoryFileArchiveFormat value)
        {
            this.Append(Meziantou.GitLab.Serialization.EnumMember.ToString(value));
        }
    }
}
