// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace Meziantou.GitLab
{
    [System.Text.Json.Serialization.JsonConverterAttribute(typeof(Meziantou.GitLab.Serialization.TodoJsonConverter))]
    public partial class Todo : Meziantou.GitLab.Core.GitLabObject, System.IEquatable<Meziantou.GitLab.Todo>
    {
        internal Todo(System.Text.Json.JsonElement obj)
            : base(obj)
        {
        }

        [Meziantou.GitLab.Internals.MappedPropertyAttribute("action_name")]
        public TodoAction ActionName
        {
            get
            {
                return this.GetRequiredNonNullValue<TodoAction>("action_name");
            }
        }

        [Meziantou.GitLab.Internals.MappedPropertyAttribute("author")]
        public UserBasic Author
        {
            get
            {
                return this.GetRequiredNonNullValue<UserBasic>("author");
            }
        }

        [Meziantou.GitLab.Internals.MappedPropertyAttribute("body")]
        public string Body
        {
            get
            {
                return this.GetRequiredNonNullValue<string>("body");
            }
        }

        [Meziantou.GitLab.Internals.MappedPropertyAttribute("created_at")]
        public System.DateTimeOffset CreatedAt
        {
            get
            {
                return this.GetRequiredNonNullValue<System.DateTimeOffset>("created_at");
            }
        }

        [Meziantou.GitLab.Internals.MappedPropertyAttribute("id")]
        public long Id
        {
            get
            {
                return this.GetRequiredNonNullValue<long>("id");
            }
        }

        [Meziantou.GitLab.Internals.MappedPropertyAttribute("project")]
        public BasicProjectDetails Project
        {
            get
            {
                return this.GetRequiredNonNullValue<BasicProjectDetails>("project");
            }
        }

        [Meziantou.GitLab.Internals.MappedPropertyAttribute("state")]
        public TodoState State
        {
            get
            {
                return this.GetRequiredNonNullValue<TodoState>("state");
            }
        }

        [Meziantou.GitLab.Internals.MappedPropertyAttribute("target_type")]
        public TodoTargetType TargetType
        {
            get
            {
                return this.GetRequiredNonNullValue<TodoTargetType>("target_type");
            }
        }

        [Meziantou.GitLab.Internals.MappedPropertyAttribute("target_url")]
        public System.Uri TargetUrl
        {
            get
            {
                return this.GetRequiredNonNullValue<System.Uri>("target_url");
            }
        }

        public override bool Equals(object? obj)
        {
            return this.Equals((obj as Meziantou.GitLab.Todo));
        }

        public virtual bool Equals(Meziantou.GitLab.Todo? obj)
        {
            return ((!object.ReferenceEquals(obj, null)) && (this.Id == obj.Id));
        }

        public override int GetHashCode()
        {
            return System.HashCode.Combine(this.Id);
        }

        public static bool operator !=(Meziantou.GitLab.Todo? a, Meziantou.GitLab.Todo? b)
        {
            return (!(a == b));
        }

        public static bool operator ==(Meziantou.GitLab.Todo? a, Meziantou.GitLab.Todo? b)
        {
            return System.Collections.Generic.EqualityComparer<Meziantou.GitLab.Todo>.Default.Equals(a, b);
        }
    }
}

namespace Meziantou.GitLab.Serialization
{
    internal sealed partial class TodoJsonConverter : Meziantou.GitLab.Serialization.GitLabObjectBaseJsonConverter<Meziantou.GitLab.Todo>
    {
        protected override Meziantou.GitLab.Todo CreateInstance(System.Text.Json.JsonElement jsonElement)
        {
            return new Meziantou.GitLab.Todo(jsonElement);
        }
    }
}
