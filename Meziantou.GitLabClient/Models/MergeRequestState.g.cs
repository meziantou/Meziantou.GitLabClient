// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace Meziantou.GitLab
{
    [System.Text.Json.Serialization.JsonConverterAttribute(typeof(Meziantou.GitLab.Serialization.MergeRequestStateJsonConverter))]
    public enum MergeRequestState
    {
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "opened")]
        Opened,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "closed")]
        Closed,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "locked")]
        Locked,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "merged")]
        Merged
    }
}

namespace Meziantou.GitLab.Serialization
{
    partial class EnumMember
    {
        private static readonly Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestState>[] s_MergeRequestStatemembers = Meziantou.GitLab.Serialization.EnumMember.CreateMergeRequestStateMembers();

        public static Meziantou.GitLab.MergeRequestState MergeRequestStateFromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.FromString(value, Meziantou.GitLab.Serialization.EnumMember.s_MergeRequestStatemembers);
        }

        public static string ToString(Meziantou.GitLab.MergeRequestState value)
        {
            if ((value == Meziantou.GitLab.MergeRequestState.Opened))
            {
                return "opened";
            }

            if ((value == Meziantou.GitLab.MergeRequestState.Closed))
            {
                return "closed";
            }

            if ((value == Meziantou.GitLab.MergeRequestState.Locked))
            {
                return "locked";
            }

            if ((value == Meziantou.GitLab.MergeRequestState.Merged))
            {
                return "merged";
            }

            throw new System.ArgumentOutOfRangeException(nameof(value));
        }

        private static Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestState>[] CreateMergeRequestStateMembers()
        {
            Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestState>[] result = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestState>[4];
            result[0] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestState>(Meziantou.GitLab.MergeRequestState.Opened, "opened");
            result[1] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestState>(Meziantou.GitLab.MergeRequestState.Closed, "closed");
            result[2] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestState>(Meziantou.GitLab.MergeRequestState.Locked, "locked");
            result[3] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestState>(Meziantou.GitLab.MergeRequestState.Merged, "merged");
            return result;
        }
    }

    internal sealed partial class MergeRequestStateJsonConverter : Meziantou.GitLab.Serialization.EnumBaseJsonConverter<Meziantou.GitLab.MergeRequestState>
    {
        protected override Meziantou.GitLab.MergeRequestState FromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.MergeRequestStateFromString(value);
        }

        protected override string ToString(Meziantou.GitLab.MergeRequestState value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.ToString(value);
        }
    }
}
#nullable disable
