// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace Meziantou.GitLab
{
    [System.Text.Json.Serialization.JsonConverterAttribute(typeof(Meziantou.GitLab.Serialization.MergeRequestStatusJsonConverter))]
    public enum MergeRequestStatus
    {
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "checking")]
        Checking,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "can_be_merged")]
        CanBeMerged,
        [System.Runtime.Serialization.EnumMemberAttribute(Value = "cannot_be_merged")]
        CannotBeMerged
    }
}

namespace Meziantou.GitLab.Serialization
{
    partial class EnumMember
    {
        private static readonly Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestStatus>[] s_MergeRequestStatusmembers = Meziantou.GitLab.Serialization.EnumMember.CreateMergeRequestStatusMembers();

        public static Meziantou.GitLab.MergeRequestStatus MergeRequestStatusFromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.FromString(value, Meziantou.GitLab.Serialization.EnumMember.s_MergeRequestStatusmembers);
        }

        public static string ToString(Meziantou.GitLab.MergeRequestStatus value)
        {
            if ((value == Meziantou.GitLab.MergeRequestStatus.Checking))
            {
                return "checking";
            }

            if ((value == Meziantou.GitLab.MergeRequestStatus.CanBeMerged))
            {
                return "can_be_merged";
            }

            if ((value == Meziantou.GitLab.MergeRequestStatus.CannotBeMerged))
            {
                return "cannot_be_merged";
            }

            throw new System.ArgumentOutOfRangeException(nameof(value));
        }

        private static Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestStatus>[] CreateMergeRequestStatusMembers()
        {
            Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestStatus>[] result = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestStatus>[3];
            result[0] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestStatus>(Meziantou.GitLab.MergeRequestStatus.Checking, "checking");
            result[1] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestStatus>(Meziantou.GitLab.MergeRequestStatus.CanBeMerged, "can_be_merged");
            result[2] = new Meziantou.GitLab.Serialization.EnumMember<Meziantou.GitLab.MergeRequestStatus>(Meziantou.GitLab.MergeRequestStatus.CannotBeMerged, "cannot_be_merged");
            return result;
        }
    }

    internal sealed partial class MergeRequestStatusJsonConverter : Meziantou.GitLab.Serialization.EnumBaseJsonConverter<Meziantou.GitLab.MergeRequestStatus>
    {
        protected override Meziantou.GitLab.MergeRequestStatus FromString(string value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.MergeRequestStatusFromString(value);
        }

        protected override string ToString(Meziantou.GitLab.MergeRequestStatus value)
        {
            return Meziantou.GitLab.Serialization.EnumMember.ToString(value);
        }
    }
}
#nullable disable
