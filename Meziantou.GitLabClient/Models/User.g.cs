// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace Meziantou.GitLab
{
    [System.Text.Json.Serialization.JsonConverterAttribute(typeof(Meziantou.GitLab.Serialization.UserJsonConverter))]
    public partial class User : UserBasic
    {
        internal User(System.Text.Json.JsonElement obj)
            : base(obj)
        {
        }

        [Meziantou.GitLab.MappedPropertyAttribute("bio")]
        public string? Bio
        {
            get
            {
                return this.GetValueOrDefault<string?>("bio", default(string?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("can_create_group")]
        public bool? CanCreateGroup
        {
            get
            {
                return this.GetValueOrDefault<bool?>("can_create_group", default(bool?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("can_create_project")]
        public bool? CanCreateProject
        {
            get
            {
                return this.GetValueOrDefault<bool?>("can_create_project", default(bool?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("color_scheme_id")]
        public long? ColorSchemeId
        {
            get
            {
                return this.GetValueOrDefault<long?>("color_scheme_id", default(long?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("confirmed_at")]
        public System.DateTimeOffset? ConfirmedAt
        {
            get
            {
                return this.GetValueOrDefault<System.DateTimeOffset?>("confirmed_at", default(System.DateTimeOffset?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("created_at")]
        public System.DateTimeOffset CreatedAt
        {
            get
            {
                return this.GetRequiredNonNullValue<System.DateTimeOffset>("created_at");
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("current_sign_in_at")]
        public System.DateTimeOffset? CurrentSignInAt
        {
            get
            {
                return this.GetValueOrDefault<System.DateTimeOffset?>("current_sign_in_at", default(System.DateTimeOffset?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("email")]
        public string? Email
        {
            get
            {
                return this.GetValueOrDefault<string?>("email", default(string?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("external")]
        public bool? External
        {
            get
            {
                return this.GetValueOrDefault<bool?>("external", default(bool?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("identities")]
        public System.Collections.Generic.IReadOnlyList<Identity>? Identities
        {
            get
            {
                return this.GetValueOrDefault<System.Collections.Generic.IReadOnlyList<Identity>?>("identities", default(System.Collections.Generic.IReadOnlyList<Identity>?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("is_admin")]
        public bool? IsAdmin
        {
            get
            {
                return this.GetValueOrDefault<bool?>("is_admin", default(bool?));
            }
        }

        [Meziantou.GitLab.SkipUtcDateValidationAttribute]
        [Meziantou.GitLab.MappedPropertyAttribute("last_activity_on")]
        public System.DateTime? LastActivityOn
        {
            get
            {
                return this.GetValueOrDefault<System.DateTime?>("last_activity_on", default(System.DateTime?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("last_sign_in_at")]
        public System.DateTimeOffset? LastSignInAt
        {
            get
            {
                return this.GetValueOrDefault<System.DateTimeOffset?>("last_sign_in_at", default(System.DateTimeOffset?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("linkedin")]
        public string? Linkedin
        {
            get
            {
                return this.GetValueOrDefault<string?>("linkedin", default(string?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("location")]
        public string? Location
        {
            get
            {
                return this.GetValueOrDefault<string?>("location", default(string?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("organization")]
        public string? Organization
        {
            get
            {
                return this.GetValueOrDefault<string?>("organization", default(string?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("private_profile")]
        public bool? PrivateProfile
        {
            get
            {
                return this.GetValueOrDefault<bool?>("private_profile", default(bool?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("projects_limit")]
        public int? ProjectsLimit
        {
            get
            {
                return this.GetValueOrDefault<int?>("projects_limit", default(int?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("shared_runners_minutes_limit")]
        public int? SharedRunnersMinutesLimit
        {
            get
            {
                return this.GetValueOrDefault<int?>("shared_runners_minutes_limit", default(int?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("skype")]
        public string? Skype
        {
            get
            {
                return this.GetValueOrDefault<string?>("skype", default(string?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("theme_id")]
        public long? ThemeId
        {
            get
            {
                return this.GetValueOrDefault<long?>("theme_id", default(long?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("twitter")]
        public string? Twitter
        {
            get
            {
                return this.GetValueOrDefault<string?>("twitter", default(string?));
            }
        }

        [Meziantou.GitLab.MappedPropertyAttribute("two_factor_enabled")]
        public bool? TwoFactorEnabled
        {
            get
            {
                return this.GetValueOrDefault<bool?>("two_factor_enabled", default(bool?));
            }
        }

        [Meziantou.GitLab.SkipAbsoluteUriValidationAttribute]
        [Meziantou.GitLab.MappedPropertyAttribute("website_url")]
        public System.Uri? WebsiteUrl
        {
            get
            {
                return this.GetValueOrDefault<System.Uri?>("website_url", default(System.Uri?));
            }
        }
    }
}

namespace Meziantou.GitLab.Serialization
{
    internal sealed partial class UserJsonConverter : Meziantou.GitLab.Serialization.GitLabObjectBaseJsonConverter<Meziantou.GitLab.User>
    {
        protected override Meziantou.GitLab.User CreateInstance(System.Text.Json.JsonElement jsonElement)
        {
            return new Meziantou.GitLab.User(jsonElement);
        }
    }
}
